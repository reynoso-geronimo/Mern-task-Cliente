{"version":3,"sources":["context/alertas/alertaContext.js","context/autenticacion/authContext.js","components/auth/Login.js","components/auth/NuevaCuenta.js","context/proyectos/proyectoContext.js","components/proyectos/NuevoProyecto.js","context/tareas/tareaContext.js","components/proyectos/Proyecto.js","components/proyectos/ListadoProyectos.js","components/layout/Sidebar.js","components/layout/Barra.js","components/tareas/FormTarea.js","components/tareas/Tarea.js","components/tareas/ListadoTareas.js","components/proyectos/Proyectos.js","types/index.js","context/proyectos/proyectoReducer.js","config/axios.js","context/proyectos/proyectoState.js","context/tareas/tareaReducer.js","context/tareas/tareaState.js","context/alertas/alertaReducer.js","context/alertas/alertaState.js","context/autenticacion/authReducer.js","config/tokenAuth.js","context/autenticacion/authState.js","components/rutas/RutaPrivada.js","App.js","reportWebVitals.js","index.js"],"names":["alertaContext","createContext","authContext","Login","props","useContext","AlertaContext","alerta","mostrarAlerta","AuthContext","mensaje","autenticado","iniciarSesion","useEffect","history","push","msg","categoria","useState","email","password","usuario","guardarUsuario","onChange","e","target","name","value","className","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","to","NuevaCuenta","registrarUsuario","nombre","confirmar","length","proyectoContext","NuevoProyecto","proyectosContext","formulario","errorformulario","mostrarFormulario","agregarProyecto","mostrarError","proyecto","guardarProyecto","onClick","tareaContext","Proyecto","proyectoActual","obtenerTareas","_id","ListadoProyectos","proyectos","obtenerProyectos","TransitionGroup","map","CSSTransition","timeout","classNames","Sidebar","Barra","usuarioAutenticado","cerrarSesion","FormTarea","tareasContext","tareaseleccionada","agregarTarea","validarTarea","errortarea","actualizarTarea","limpiarTarea","guardarTarea","tarea","Tarea","eliminarTarea","guardarTareaActual","cambiarEstado","estado","seleccionarTarea","ListadoTareas","eliminarProyecto","tareasproyecto","Proyectos","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","PROYECTO_ERROR","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","MOSTRAR_ALERTA","OCULTAR_ALERTA","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","ProyectoReducer","state","action","payload","filter","clienteAxios","axios","create","baseURL","process","ProyectoState","useReducer","proyectoReducer","dispatch","a","get","resultado","data","post","console","log","proyectoId","delete","Provider","children","TareaReducer","TareaState","params","tareas","put","AlertaState","alertaReducer","setTimeout","localStorage","setItem","token","cargando","removeItem","tokenAuth","defaults","headers","common","Authstate","initialState","getItem","authReducer","datos","respuesta","response","RutaPrivada","Component","component","render","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9784578e.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nconst alertaContext = createContext()\r\n\r\nexport default alertaContext;","import {createContext} from 'react';\r\n\r\nconst authContext = createContext()\r\n\r\nexport default authContext;","import React, {useState,useContext, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport AlertaContext from \"../../context/alertas/alertaContext\";\r\nimport AuthContext from '../../context/autenticacion/authContext'\r\n\r\nconst Login = (props) => {\r\n      //extraer los valores del cotnext alerta\r\n  const alertaContext = useContext(AlertaContext);\r\n  const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const {mensaje, autenticado, iniciarSesion}= authContext \r\n\r\n  \r\n  useEffect(()=>{\r\n     if(autenticado){\r\n      props.history.push('/proyectos');\r\n    }\r\n    if(mensaje){\r\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n    }\r\n    \r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[mensaje, autenticado, props.history])\r\n\r\n    //state para iniciar sesion\r\n    const [usuario, guardarUsuario]= useState({\r\n        email:'',\r\n        password:''\r\n    })\r\n\r\n    const {email, password}= usuario\r\n    const onChange= e=>{\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    //cuando el usuario quiere iniciar sesion\r\n\r\n    const onSubmit =e=>{\r\n        e.preventDefault()\r\n        //validacion\r\n        if(email.trim()===''||password.trim()===''){\r\n            mostrarAlerta('Todos los campos son olbigatorios','alerta-error')\r\n        }\r\n        iniciarSesion({email, password});\r\n        //pasarlo al action \r\n\r\n    }\r\n\r\n    return ( \r\n        <div className=\"form-usuario\">\r\n            {alerta ? (\r\n        <div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>\r\n      ) : null}\r\n        <div className=\"contenedor-form sombra-dark\">\r\n            <h1>Iniciar Sesión</h1>\r\n\r\n            <form\r\n                    onSubmit={onSubmit}\r\n                    >\r\n                <div className=\"campo-form\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input \r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        placeholder=\"Tu Email\"\r\n                       \r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo-form\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input \r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Tu Password\"\r\n                        value={password}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div className='campo-form'>\r\n                    <input \r\n                    type='submit'\r\n                    className='btn btn-primario btn-block'\r\n                    value= 'Iniciar Sesion'\r\n                    />\r\n                </div>\r\n               \r\n            </form>\r\n            <Link to ={'/nueva-cuenta'} className='enlace-cuenta'>Obtener cuenta</Link>\r\n            </div>\r\n        </div>\r\n        );\r\n}\r\n \r\nexport default Login;","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AlertaContext from \"../../context/alertas/alertaContext\";\r\nimport AuthContext from '../../context/autenticacion/authContext'\r\nconst NuevaCuenta = (props) => {\r\n  //extraer los valores del cotnext alerta\r\n  const alertaContext = useContext(AlertaContext);\r\n  const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const {mensaje, autenticado, registrarUsuario}= authContext \r\n\r\n  //en caso de que el usuario se haya autenticado o registrado o sea un registro duplicado\r\n\r\n  useEffect(()=>{\r\n    if(autenticado){\r\n      props.history.push('/proyectos');\r\n    }\r\n    if(mensaje){\r\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n    }\r\n  // eslint-disable-next-line\r\n  },[mensaje, autenticado, props.history])\r\n\r\n\r\n  //state para iniciar sesion\r\n  const [usuario, guardarUsuario] = useState({\r\n    nombre: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmar: \"\",\r\n  });\r\n\r\n  const { nombre, email, password, confirmar } = usuario;\r\n  const onChange = (e) => {\r\n    guardarUsuario({\r\n      ...usuario,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //cuando el usuario quiere iniciar sesion\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    //validacion\r\n    if (\r\n      nombre.trim() === \"\" ||\r\n      email.trim() === \"\" ||\r\n      password.trim() === \"\" ||\r\n      confirmar.trim() === \"\"\r\n    ) {\r\n      mostrarAlerta(\"Todos los campos son obligatorios\", \"alerta-error\");\r\n      return;\r\n    }\r\n    //password de al menos 6 char\r\n    if (password.length < 6) {\r\n      mostrarAlerta(\r\n        \"el Password debe tener al menos 6 caracteres\",\"alerta-error\");\r\n      return;\r\n    }\r\n    //los 2 passwords deben ser iguales\r\n    if(password!==confirmar){\r\n        mostrarAlerta(\r\n            \"Los passwords no coinciden\",\"alerta-error\");\r\n          return;\r\n    }\r\n    //pasarlo al action\r\n    registrarUsuario({nombre,email,password})\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-usuario\">\r\n      {alerta ? (\r\n        <div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>\r\n      ) : null}\r\n      <div className=\"contenedor-form sombra-dark\">\r\n        <h1>Obtener una cuenta</h1>\r\n\r\n        <form onSubmit={onSubmit}>\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"nombre\">Nombre</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"nombre\"\r\n              name=\"nombre\"\r\n              value={nombre}\r\n              placeholder=\"Tu Nombre\"\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              placeholder=\"Tu Email\"\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Tu Password\"\r\n              value={password}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"confirmar\">Confirmar Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirmar\"\r\n              name=\"confirmar\"\r\n              placeholder=\"Confirmar Tu Password\"\r\n              value={confirmar}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div className=\"campo-form\">\r\n            <input\r\n              type=\"submit\"\r\n              className=\"btn btn-primario btn-block\"\r\n              value=\"Registrarme\"\r\n            />\r\n          </div>\r\n        </form>\r\n        <Link to={\"/\"} className=\"enlace-cuenta\">\r\n          Volver a Iniciar Sesion\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NuevaCuenta;\r\n","import {createContext} from 'react';\r\n \r\nconst proyectoContext= createContext();\r\n\r\nexport default proyectoContext","import React, {Fragment,useState, useContext} from 'react'\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\n\r\nconst NuevoProyecto = () => {\r\n    //obtener el state del formulario\r\n    const proyectosContext = useContext(proyectoContext)\r\n    const {formulario,errorformulario,mostrarFormulario,agregarProyecto,mostrarError } = proyectosContext\r\n\r\n\r\n\r\n    const [proyecto, guardarProyecto]= useState({\r\n        nombre:''\r\n\r\n    });\r\n\r\n    const {nombre} = proyecto\r\n    const onChangeProyecto= e=>{\r\n        guardarProyecto({\r\n            ...proyecto,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmitProyecto= e=>{\r\n        e.preventDefault()\r\n\r\n        //validar\r\n        if(nombre===''){\r\n            mostrarError()\r\n            return;\r\n        }\r\n        //agregar al state\r\n        agregarProyecto(proyecto)\r\n        //reinicar el form\r\n        guardarProyecto('')\r\n    }\r\n\r\n      const onClickFormulario = ()=>{\r\n        mostrarFormulario();\r\n      }\r\n\r\n    return ( <Fragment>\r\n        <button \r\n            type='button'\r\n            className='btn btn-block btn-primario'\r\n            onClick={()=>onClickFormulario()}\r\n        >Nuevo Proyecto</button>\r\n        { \r\n            formulario\r\n            ? \r\n            (\r\n                <form\r\n            className= 'formulario-nuevo-proyecto'\r\n            onSubmit={onSubmitProyecto}\r\n            >\r\n                <input\r\n                    type='text'\r\n                    className='input-text'\r\n                    placeholder='Nombre Proyecto'\r\n                    name='nombre'\r\n                    value={nombre}\r\n                    onChange={onChangeProyecto}\r\n                />\r\n                <input \r\n                    type='submit'\r\n                    className='btn btn-primario btn-block'\r\n                    value='Agregar Proyecto'\r\n                    />\r\n\r\n        </form>\r\n            )\r\n            :null\r\n        }\r\n        {errorformulario?<p className='mensaje error'>El nombre del Proyecto es Obligatorio</p>:null}\r\n     </Fragment>);\r\n}\r\n \r\nexport default NuevoProyecto;","import {createContext} from 'react';\r\n\r\nconst tareaContext = createContext();\r\n \r\nexport default tareaContext;","import React,{useContext} from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\n\r\nconst Proyecto = ({proyecto}) => {\r\n    //obtener state de proyectos\r\n    const proyectosContext = useContext(proyectoContext)\r\n    const { proyectoActual } = proyectosContext\r\n    //obtener la funciion del contest de tarea\r\n\r\n    const tareasContext= useContext(tareaContext)\r\n    const {obtenerTareas} = tareasContext\r\n    //funcion para agregar al pryotecto actual\r\n    const seleccionarProyecto=id=>{\r\n        proyectoActual(id);//fijar un proyecto actual\r\n        obtenerTareas(id);//filtrar tareas cuando se le da click\r\n    }\r\n\r\n    return (\r\n         <li>\r\n             <button\r\n                type='button'\r\n                className='btn btn-blank'\r\n                onClick={()=>seleccionarProyecto(proyecto._id)}\r\n             >\r\n                 {proyecto.nombre}\r\n             </button>\r\n\r\n         </li> \r\n    );\r\n}\r\n \r\nexport default Proyecto;","import React, { useContext,useEffect } from 'react';\r\nimport Proyecto from './Proyecto';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport {CSSTransition, TransitionGroup}from 'react-transition-group';\r\nimport AlertaContext from '../../context/alertas/alertaContext'\r\n\r\nconst ListadoProyectos = () => {\r\n    //extraer proyectos del state inicial\r\n    const proyectosContext= useContext(proyectoContext)\r\n    const {mensaje, proyectos,obtenerProyectos} =proyectosContext\r\n    \r\n    const alertaContext= useContext(AlertaContext)\r\n    const {alerta, mostrarAlerta}= alertaContext\r\n\r\n    //obtener proyectos cuando cargue el componente\r\n    useEffect(()=>{\r\n        \r\n        //si hay un error\r\n        if(mensaje){\r\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n        }\r\n        obtenerProyectos()\r\n        //eslint-disable-next-line\r\n    },[mensaje])\r\n    \r\n    //revisar si proyectos tiene contenido\r\n    \r\n    if(proyectos.length===0)return <p>No hay proyectos, comienza creando uno</p>;\r\n   \r\n    return ( \r\n        <ul className='listado-proyectos'>\r\n            {alerta? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>):null}\r\n            <TransitionGroup>\r\n            {proyectos.map(proyecto=>(\r\n              <CSSTransition\r\n              \r\n              key={proyecto._id}\r\n              timeout={200}\r\n              classNames='tarea'\r\n              >\r\n                    <Proyecto\r\n                \r\n                proyecto={proyecto}\r\n                />\r\n              </CSSTransition>\r\n            ))}\r\n            </TransitionGroup>\r\n        </ul>\r\n     );\r\n}\r\n \r\nexport default ListadoProyectos;","import React from 'react';\r\nimport NuevoProyecto from '../proyectos/NuevoProyecto';\r\nimport ListadoProyectos from '../proyectos/ListadoProyectos';\r\n\r\nconst Sidebar = () => {\r\n    return ( \r\n        <aside>\r\n            <h1>MERN<span>Tasks</span></h1>\r\n            <NuevoProyecto/>\r\n            <div className=\"proyectos\">\r\n                <h2>Tus Proyectos</h2>\r\n                <ListadoProyectos/>\r\n            </div>\r\n        </aside>\r\n     );\r\n}\r\n \r\nexport default Sidebar;","import React,{useEffect,useContext} from 'react';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\nconst Barra = () => {\r\n     //extraer la informacion de autenticacion\r\n     const authContext= useContext(AuthContext)\r\n     const {usuario, usuarioAutenticado, cerrarSesion} = authContext\r\n     useEffect(()=>{\r\n         usuarioAutenticado();\r\n     \r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n     },[])\r\n     \r\n    return ( \r\n        <header className='app-header'>\r\n            {usuario?<p className='nombre-usuario'>Hola <span>{usuario.nombre}</span></p>:null}\r\n            \r\n            <nav className='nav-principal'>\r\n                <button\r\n                    className='btn btn-blank cerrar-sesion'\r\n                    onClick={()=>cerrarSesion()}\r\n\r\n                >Cerrar Sesion</button>\r\n            </nav>\r\n\r\n        </header>\r\n     );\r\n}\r\n \r\nexport default Barra;","import React,{useContext,useState,useEffect} from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\nconst FormTarea = () => {\r\n\r\n    const proyectosContext=useContext(proyectoContext)\r\n    const {proyecto}= proyectosContext\r\n    \r\n    const tareasContext=useContext(tareaContext)\r\n    const {tareaseleccionada, agregarTarea, validarTarea, errortarea,obtenerTareas,actualizarTarea, limpiarTarea}= tareasContext\r\n    //state del formulario\r\n    //effect que detecta si hay una tarea seleccionada para edicion\r\n    useEffect(()=>{\r\n        if(tareaseleccionada!==null){\r\n            guardarTarea(tareaseleccionada)\r\n        }else{\r\n            guardarTarea({\r\n                nombre:''\r\n            })\r\n        }\r\n    },[tareaseleccionada])\r\n\r\n    const [tarea,guardarTarea]=useState({\r\n        nombre:'',\r\n        \r\n    })\r\n\r\n    //extraer el nombre de la tarea\r\n    const {nombre}= tarea;\r\n\r\n    //leer los valores del formulario\r\n\r\n    const handleChange=e=>{\r\n        guardarTarea({\r\n            ...tarea,\r\n            [e.target.name]:e.target.value})\r\n           \r\n            \r\n    }\r\n\r\n    \r\n\r\n    //si no hay proyecto\r\n    if(!proyecto) return null;\r\n    //si hay proyecto array destructuring\r\n\r\n    const [proyectoActual]= proyecto\r\n    \r\n    const onSubmit=e=>{\r\n        e.preventDefault();\r\n        //validar\r\n        if(nombre.trim()===''){\r\n            validarTarea();\r\n            return\r\n        }\r\n        \r\n        //revisar si hay edicion o es nuevo\r\n        if(tareaseleccionada===null){\r\n          \r\n            //agregar la nueva tarea al state de tareas\r\n            tarea.proyecto= proyectoActual._id;\r\n            agregarTarea(tarea);\r\n        }else{\r\n            //actualizar tarea existente\r\n            \r\n            actualizarTarea(tarea);\r\n            // elimina la tarea seleccionada del state\r\n            limpiarTarea()\r\n        }\r\n       \r\n        //obtener y filtrar tareas del proyecto actual\r\n        obtenerTareas(proyectoActual._id)\r\n        //reiniciar el form\r\n        guardarTarea({\r\n            nombre:''\r\n        })\r\n    }\r\n\r\n    return ( \r\n    <div className=\"formulario\">\r\n        <form\r\n            onSubmit={onSubmit}\r\n        >\r\n            <div className=\"contenedor-input\">\r\n                <input\r\n                    type='text'\r\n                    className='input-text'\r\n                    placeholder='Nombre Tarea...'\r\n                    name='nombre'\r\n                    onChange={handleChange}\r\n                    value={nombre}\r\n                />\r\n                \r\n            </div>\r\n            <div className=\"contenedor-input\">\r\n                <input\r\n                    type='submit'\r\n                    className='btn btn-primario btn-submit btn-block'\r\n                    value={tareaseleccionada?'Editar Tarea':'Agregar Tarea'}\r\n                    />\r\n            </div>\r\n        </form>\r\n        {errortarea?<p className='mensaje error'>El nombre de la tarea es obligatorio</p> :null}\r\n    </div> );\r\n}\r\n \r\nexport default FormTarea;","import React,{useContext} from 'react';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\n\r\nconst Tarea = ({tarea}) => {\r\n\r\n    const proyectosContext=useContext(proyectoContext)\r\n    const {proyecto}= proyectosContext\r\n\r\n\r\n    const tareasContext=useContext(tareaContext)\r\n    const {eliminarTarea,obtenerTareas,actualizarTarea, guardarTareaActual}= tareasContext\r\n   \r\n    //extraer el proyecto\r\n\r\n    const [proyectoActual] = proyecto\r\n\r\n    //funcion que se ejecuta cuando el usuario presion el boton de elimar tareaa\r\n\r\n    const tareaEliminar= id =>{\r\n        eliminarTarea(id, proyectoActual._id)\r\n        obtenerTareas(proyectoActual._id)\r\n    }\r\n    //funcion que cambia el estado de la tarea\r\n    const cambiarEstado=tarea =>{\r\n        if(tarea.estado){\r\n            tarea.estado=false;\r\n        }else{\r\n            tarea.estado=true;\r\n        }\r\n        actualizarTarea(tarea)\r\n    }\r\n\r\n    const seleccionarTarea = tarea=>{\r\n        guardarTareaActual(tarea)\r\n    }\r\n\r\n    return ( \r\n        <li className='tarea sombra'>\r\n            <p>{tarea.nombre}</p>\r\n            <div className=\"estado\">\r\n                {tarea.estado \r\n                ? (\r\n                    <button\r\n                        type='button'\r\n                        className='completo'\r\n                        onClick={()=>{cambiarEstado(tarea)}}\r\n                    >Completo</button>\r\n                )\r\n                :(\r\n                    <button\r\n                        type='button'\r\n                        className='incompleto'\r\n                        onClick={()=>{cambiarEstado(tarea)}}\r\n                    >Incompleto</button>\r\n                )}\r\n            </div>\r\n            <div className=\"acciones\">\r\n                <button\r\n                    type='button'\r\n                    className='btn btn-primario'\r\n                    onClick={()=>{seleccionarTarea(tarea)}}\r\n                >Editar</button>\r\n                \r\n                <button\r\n                    type='button'\r\n                    className='btn btn-secundario'\r\n                    onClick={()=>{tareaEliminar(tarea._id)}}\r\n                >Eliminar</button>\r\n            </div>\r\n        </li>\r\n     );\r\n}\r\n \r\nexport default Tarea;","import React,{Fragment,useContext} from 'react';\r\nimport Tarea from './Tarea';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\nimport {CSSTransition, TransitionGroup}from 'react-transition-group';\r\n\r\nconst ListadoTareas = () => {\r\n    const proyectosContext= useContext(proyectoContext)\r\n    const {proyecto,eliminarProyecto} =proyectosContext\r\n    const tareasContext = useContext(tareaContext)\r\n    const {tareasproyecto} = tareasContext\r\n    //array destructuring para extraer el proyecto\r\n\r\n    //si no hay proyecto seleccionado\r\n    if(!proyecto) return <h2>Selecciona un Proyecto</h2>\r\n    \r\n    const [proyectoActual] = proyecto\r\n    \r\n   \r\n    const onclickEliminar=()=>{\r\n        eliminarProyecto(proyectoActual._id)\r\n    }\r\n\r\n    return ( <Fragment>\r\n        <h2>Proyecto: {proyectoActual.nombre}</h2>\r\n        <ul className='listado-tareas'>\r\n            {tareasproyecto.length===0\r\n                ?(<li className='tarea'><p>No hay tareas</p></li>)\r\n                : <TransitionGroup>\r\n                   { tareasproyecto.map(tarea=>(\r\n                    <CSSTransition\r\n                    key={tarea._id}\r\n                    timeout={200}\r\n                    classNames='proyecto'\r\n                    >\r\n                        \r\n                        <Tarea\r\n                        \r\n                        tarea={tarea}\r\n                    />\r\n                    </CSSTransition>\r\n                ))}\r\n                </TransitionGroup>\r\n\r\n            }\r\n             <button\r\n            type=\"button\"\r\n            className=\"btn btn-eliminar\"\r\n            onClick={()=>{onclickEliminar()}}\r\n        >Eliminar Proyecto &times;</button>\r\n        </ul>\r\n\r\n       \r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default ListadoTareas;","import React,{useContext, useEffect} from 'react';\r\nimport Sidebar from '../layout/Sidebar';\r\nimport Barra from '../layout/Barra';\r\nimport FormTarea from '../tareas/FormTarea';\r\nimport ListadoTareas from '../tareas/ListadoTareas';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\n\r\n\r\n\r\nconst Proyectos = () => {\r\n    //extraer la informacion de autenticacion\r\n    const authContext= useContext(AuthContext)\r\n    const {usuarioAutenticado} = authContext\r\n    useEffect(()=>{\r\n        usuarioAutenticado();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n\r\n    return ( \r\n        <div className=\"contenedor-app\">\r\n              <Sidebar/>\r\n            <div className=\"seccion-principal\">\r\n                <Barra/>\r\n                <main>\r\n                    <FormTarea/>\r\n                    <div className=\"contender-tareas\">\r\n                    <ListadoTareas/>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Proyectos;","export const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO';\r\nexport const OBTENER_PROYECTOS='OBTENER_PROYECTOS';\r\nexport const AGREGAR_PROYECTO='AGREGAR_PROYECTO';\r\nexport const VALIDAR_FORMULARIO='VALIDAR_FORMULARIO';\r\nexport const PROYECTO_ACTUAL='PROYECTO_ACTUAL';\r\nexport const ELIMINAR_PROYECTO='ELIMINAR_PROYECTO';\r\nexport const PROYECTO_ERROR='PROYECTO_ERROR'\r\n\r\nexport const TAREAS_PROYECTO = 'TAREAS_PROYECTO';\r\nexport const AGREGAR_TAREA='AGREGAR_TAREA';\r\nexport const VALIDAR_TAREA='VALIDAR_TAREA';\r\nexport const ELIMINAR_TAREA='ELIMINAR_TAREA';\r\n\r\nexport const TAREA_ACTUAL='TAREA_ACTUAL';\r\nexport const ACTUALIZAR_TAREA='ACTUALIZAR_TAREA'\r\nexport const LIMPIAR_TAREA='LIMPIAR_TAREA'\r\n\r\nexport const MOSTRAR_ALERTA='MOSTRAR_ALERTA'\r\nexport const OCULTAR_ALERTA='OCULTAR ALERTA'\r\n\r\nexport const REGISTRO_EXITOSO='REGISTRO_EXITOSO'\r\nexport const REGISTRO_ERROR='REGISTRO_ERROR'\r\nexport const OBTENER_USUARIO='OBTENER_USUARIO'\r\nexport const LOGIN_EXITOSO='LOGIN_EXITOSO'\r\nexport const LOGIN_ERROR='LOGIN_ERROR'\r\nexport const CERRAR_SESION= 'CERRAR_SESION'\r\n","import {\r\n    FORMULARIO_PROYECTO,\r\n    OBTENER_PROYECTOS,\r\n    AGREGAR_PROYECTO,\r\n    VALIDAR_FORMULARIO,\r\n    PROYECTO_ACTUAL, \r\n    ELIMINAR_PROYECTO,\r\n    PROYECTO_ERROR\r\n  } from \"../../types\";\r\n  \r\n  const ProyectoReducer = (state,action)=>{\r\n    switch(action.type){\r\n        case FORMULARIO_PROYECTO:\r\n            return{\r\n                ...state,\r\n                formulario:true\r\n            }\r\n        case OBTENER_PROYECTOS :\r\n            return{\r\n                ...state,\r\n                proyectos:action.payload\r\n            }\r\n        case AGREGAR_PROYECTO :\r\n            return{\r\n                ...state,\r\n                proyectos:[...state.proyectos,action.payload],\r\n                formulario:false,\r\n                errorformulario:false\r\n            }\r\n        case VALIDAR_FORMULARIO:\r\n            return{\r\n                ...state,\r\n                errorformulario:true\r\n\r\n            }\r\n        case PROYECTO_ACTUAL:\r\n            return{\r\n                ...state,\r\n                proyecto:state.proyectos.filter(proyecto=>proyecto._id===action.payload)\r\n            }\r\n        case ELIMINAR_PROYECTO :\r\n            return{\r\n                ...state,\r\n                proyectos:state.proyectos.filter(proyecto=>proyecto._id!==action.payload),\r\n                proyecto: null\r\n            }\r\n        case PROYECTO_ERROR:\r\n            return{\r\n                ...state,\r\n                mensaje:action.payload\r\n            }\r\n        default:\r\n            return state;   \r\n    }\r\n}\r\nexport default ProyectoReducer","import axios from 'axios'\r\n\r\nconst clienteAxios = axios.create({\r\n    baseURL:process.env.REACT_APP_BACKEDND_URL\r\n});\r\n\r\nexport default clienteAxios;","import React, { useReducer } from \"react\";\r\n\r\nimport proyectoContext from \"./proyectoContext\";\r\nimport proyectoReducer from \"./proyectoReducer\";\r\nimport {\r\n  FORMULARIO_PROYECTO,\r\n  OBTENER_PROYECTOS,\r\n  AGREGAR_PROYECTO,\r\n  VALIDAR_FORMULARIO,\r\n  PROYECTO_ACTUAL,\r\n  ELIMINAR_PROYECTO,\r\n  PROYECTO_ERROR \r\n} from \"../../types\";\r\nimport clienteAxios from '../../config/axios'\r\n\r\n\r\n\r\nconst ProyectoState = (props) => {\r\n\r\n  \r\n  const initialState = {\r\n        proyectos : [],\r\n    formulario: false,\r\n    errorformulario:false,\r\n    proyecto:null,\r\n    mensaje:null\r\n  };\r\n  //dispatch para ejecutar las acciones\r\n\r\n  const [state, dispatch] = useReducer(proyectoReducer, initialState);\r\n\r\n  //serie de funciones para el CRUD\r\n  const mostrarFormulario = () => {\r\n    dispatch({\r\n      type: FORMULARIO_PROYECTO,\r\n    });\r\n  };\r\n  //obtener los proyectos\r\n  const obtenerProyectos= async  ()=>{\r\n  try {\r\n    const resultado = await clienteAxios.get('/api/proyectos')\r\n    dispatch({\r\n\r\n      type: OBTENER_PROYECTOS,\r\n      payload:resultado.data.proyectos\r\n\r\n    })\r\n  } catch (error) {\r\n    const alerta = {\r\n      msg:'Hubo un error',\r\n      categoria:'alerta-error'\r\n    }\r\n    dispatch({\r\n      type:PROYECTO_ERROR,\r\n      payload:alerta\r\n    })\r\n  }\r\n  }\r\n  //agregar nuevo proyecto\r\n\r\n  const agregarProyecto= async proyecto=>{\r\n    \r\n    try {\r\n      const resultado =await clienteAxios.post('/api/proyectos', proyecto);\r\n      console.log(resultado)\r\n      dispatch({\r\n        type:AGREGAR_PROYECTO,\r\n        payload: resultado.data\r\n      })   \r\n    } catch (error) {\r\n      const alerta = {\r\n        msg:'Hubo un error',\r\n        categoria:'alerta-error'\r\n      }\r\n      dispatch({\r\n        type:PROYECTO_ERROR,\r\n        payload:alerta\r\n      })\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  //valida el formulario\r\n\r\n  const mostrarError=()=>{\r\n    dispatch({\r\n      type:VALIDAR_FORMULARIO\r\n    })\r\n  }\r\n  //seleccion el proyecto\r\n\r\n  const proyectoActual= proyectoId=>{\r\n    dispatch({\r\n      type:PROYECTO_ACTUAL,\r\n      payload:proyectoId\r\n    })\r\n  }\r\n  //elimina un proyecto\r\n  const eliminarProyecto = async proyectoId=>{\r\n    try {\r\n     await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\r\n     dispatch({\r\n      type:ELIMINAR_PROYECTO,\r\n      payload:proyectoId\r\n    })\r\n      \r\n    } catch (error) {\r\n      const alerta = {\r\n        msg:'Hubo un error',\r\n        categoria:'alerta-error'\r\n      }\r\n      dispatch({\r\n        type:PROYECTO_ERROR,\r\n        payload:alerta\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <proyectoContext.Provider\r\n      value={{\r\n        proyectos: state.proyectos,\r\n        formulario: state.formulario,\r\n        errorformulario:state.errorformulario,\r\n        proyecto:state.proyecto,\r\n        mensaje:state.mensaje,\r\n        mostrarFormulario,\r\n        obtenerProyectos,\r\n        agregarProyecto,\r\n        mostrarError,\r\n        proyectoActual,\r\n        eliminarProyecto\r\n      }}\r\n    >\r\n      {props.children}\r\n    </proyectoContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ProyectoState;\r\n","import {\r\n    AGREGAR_TAREA,\r\n    TAREAS_PROYECTO,\r\n    VALIDAR_TAREA,\r\n    ELIMINAR_TAREA,\r\n    TAREA_ACTUAL,\r\n    ACTUALIZAR_TAREA,\r\n    LIMPIAR_TAREA\r\n} from '../../types'\r\n\r\nconst TareaReducer = (state, action)=>{\r\n    switch(action.type){\r\n        case TAREAS_PROYECTO:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: action.payload\r\n                }\r\n        case AGREGAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareasproyecto:[action.payload,...state.tareasproyecto],\r\n                errortarea:false\r\n            }\r\n         case VALIDAR_TAREA:\r\n             return{\r\n                 ...state,\r\n                 errortarea:true\r\n             }    \r\n         case ELIMINAR_TAREA:\r\n             return{\r\n                 ...state,\r\n                 tareasproyecto:state.tareasproyecto.filter(tarea=>tarea._id!==action.payload)\r\n             }  \r\n             case ACTUALIZAR_TAREA:\r\n             \r\n                 return{\r\n                     ...state,\r\n                     tareasproyecto: state.tareasproyecto.map(tarea=>tarea._id===action.payload._id?action.payload:tarea)\r\n                 }        \r\n                 case TAREA_ACTUAL:\r\n                     return{\r\n                         ...state,\r\n                        tareaseleccionada:action.payload\r\n                     }\r\n                case LIMPIAR_TAREA:\r\n                    return{\r\n                        ...state,\r\n                        tareaseleccionada:null\r\n                    } \r\n                \r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default TareaReducer","import React, { useReducer } from \"react\";\r\nimport tareaContext from \"./tareaContext\";\r\nimport TareaReducer from \"./tareaReducer\";\r\nimport clienteAxios from '../../config/axios'\r\n\r\nimport { \r\n  TAREAS_PROYECTO, \r\n  AGREGAR_TAREA,\r\n  VALIDAR_TAREA,\r\n  ELIMINAR_TAREA,\r\n  TAREA_ACTUAL,\r\n  ACTUALIZAR_TAREA, \r\n  LIMPIAR_TAREA\r\n  } from \"../../types\";\r\n\r\nconst TareaState = (props) => {\r\n  const initialState = {\r\n    tareasproyecto: [],\r\n    errortarea: false,\r\n    tareaseleccionada:null\r\n  };\r\n\r\n  // crear el dispatch y state\r\n  const [state, dispatch] = useReducer(TareaReducer, initialState);\r\n\r\n  //crear las funciones\r\n\r\n  //obtener las tareas de un proyecto especifico\r\n\r\n  const obtenerTareas =async  (proyecto) => {\r\n    try {\r\n      const resultado = await clienteAxios.get('/api/tareas', { params : {proyecto }});\r\n      console.log(resultado)\r\n      dispatch({\r\n        type: TAREAS_PROYECTO,\r\n        payload:resultado.data.tareas\r\n     \r\n      });\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  };\r\n  //agregar Tarea\r\n  const agregarTarea = async tarea => {\r\n     try {\r\n       const resultado = await clienteAxios.post('/api/tareas', tarea)\r\n       console.log(resultado, `tarea agregada`)\r\n        dispatch({\r\n          type:AGREGAR_TAREA,\r\n          payload:tarea\r\n        })\r\n     } catch (error) {\r\n       console.log(error)\r\n     }\r\n   \r\n  };\r\n  //valida y mnuestra un error en caso de que sea necesario\r\n\r\n  const validarTarea = () => {\r\n    dispatch({\r\n      type: VALIDAR_TAREA,\r\n    });\r\n  };\r\n\r\n  const eliminarTarea=async (id, proyecto)=>{\r\n   try {\r\n \r\n     await clienteAxios.delete(`/api/tareas/${id}`,{params:{proyecto}})\r\n    dispatch({\r\n      type:ELIMINAR_TAREA,\r\n      payload:id\r\n\r\n    });\r\n   } catch (error) {\r\n     console.log(error)\r\n   }\r\n  };\r\n\r\n  //cambia el estado de cada tarea\r\n  const actualizarTarea= async tarea=>{\r\n    \r\n    try {\r\n      const resultado= await clienteAxios.put(`/api/tareas/${tarea._id}`,tarea)\r\n      console.log(resultado)\r\n      dispatch({\r\n        type:ACTUALIZAR_TAREA,\r\n        payload:resultado.data.tarea\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  \r\n    //extrae una tarea para edicion\r\n    const guardarTareaActual= tarea=>{\r\n      dispatch({\r\n        type:TAREA_ACTUAL,\r\n        payload:tarea\r\n      })\r\n    }\r\n    \r\n    //elimina la tarea seleccionada\r\n    const limpiarTarea=()=>{\r\n      dispatch({\r\n        type:LIMPIAR_TAREA\r\n\r\n      })\r\n    }\r\n  return (\r\n    <tareaContext.Provider\r\n      value={{\r\n        tareasproyecto: state.tareasproyecto,\r\n        errortarea: state.errortarea,\r\n        tareaseleccionada:state.tareaseleccionada,\r\n        obtenerTareas,\r\n        agregarTarea,\r\n        validarTarea,\r\n        eliminarTarea,\r\n        guardarTareaActual,\r\n        actualizarTarea,\r\n        limpiarTarea\r\n      }}\r\n    >\r\n      {props.children}\r\n    </tareaContext.Provider>\r\n  );\r\n};\r\nexport default TareaState;\r\n","import { MOSTRAR_ALERTA, OCULTAR_ALERTA } from \"../../types\";\r\n//eslint-disable-next-line\r\nexport default (state,action)=>{\r\n    switch (action.type) {\r\n        case MOSTRAR_ALERTA:\r\n            return{\r\n                alerta:action.payload\r\n            }\r\n            case OCULTAR_ALERTA:\r\n                return{\r\n                    alerta:null\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React,{useReducer} from 'react';\r\nimport alertaReducer from './alertaReducer'\r\nimport alertaContext from './alertaContext'\r\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA } from \"../../types\";\r\n\r\nconst AlertaState = props => {\r\n    const initialState= {\r\n        alerta:null\r\n    }\r\n    const [state, dispatch] =useReducer(alertaReducer,initialState)\r\n\r\n\r\n    //funciones\r\n    const mostrarAlerta = (msg, categoria)=>{\r\n        dispatch({\r\n            type:MOSTRAR_ALERTA,\r\n            payload:{\r\n                msg,\r\n                categoria\r\n            }\r\n        });\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type:OCULTAR_ALERTA\r\n            })\r\n        }, 5000);\r\n    }\r\n\r\n    return ( \r\n        <alertaContext.Provider\r\n            value={{\r\n                alerta:state.alerta,\r\n                mostrarAlerta\r\n            \r\n            }}\r\n        >\r\n            {props.children}\r\n        </alertaContext.Provider>\r\n     );\r\n}\r\n \r\nexport default AlertaState;\r\n","import {\r\n  REGISTRO_EXITOSO,\r\n  REGISTRO_ERROR,\r\n  OBTENER_USUARIO,\r\n  LOGIN_EXITOSO,\r\n  LOGIN_ERROR,\r\n  CERRAR_SESION,\r\n} from \"../../types\";\r\n//eslint-disable-next-line\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_EXITOSO:\r\n    case REGISTRO_EXITOSO:\r\n      localStorage.setItem(\"token\", action.payload.token);\r\n      return {\r\n        ...state,\r\n        autenticado: true,\r\n        mensaje: null,\r\n        cargando:false,\r\n      };\r\n    case OBTENER_USUARIO:\r\n      return {\r\n        ...state,\r\n        autenticado:true,\r\n        usuario: action.payload,\r\n        cargando:false,\r\n      };\r\n    case CERRAR_SESION:\r\n    case REGISTRO_ERROR:\r\n    case LOGIN_ERROR:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        mensaje: action.payload,\r\n        autenticado:null,\r\n        usuario:null,\r\n        cargando:false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import clienteAxios from \"./axios\";\r\n\r\nconst tokenAuth = token =>{\r\n    if(token){\r\n        clienteAxios.defaults.headers.common['x-auth-token' ] =token;\r\n    }else{\r\n        delete clienteAxios.defaults.headers.common['x-auth-token'];\r\n\r\n    };\r\n}\r\nexport default tokenAuth;","import React, { useReducer } from \"react\";\r\nimport authReducer from \"./authReducer\";\r\nimport AuthContext from \"./authContext\";\r\nimport clienteAxios from '../../config/axios'\r\nimport tokenAuth from '../../config/tokenAuth'\r\nimport {\r\n  REGISTRO_EXITOSO,\r\n  REGISTRO_ERROR,\r\n  OBTENER_USUARIO,\r\n  LOGIN_EXITOSO,\r\n  LOGIN_ERROR,\r\n  CERRAR_SESION,\r\n} from \"../../types\";\r\n\r\n\r\nconst Authstate = props => {\r\n  const initialState = {\r\n    token: localStorage.getItem('token'),\r\n    autenticado: null,\r\n    usuario: null,\r\n    mensaje: null,\r\n    cargando:true\r\n  };\r\n  const  [state, dispatch]  = useReducer(authReducer, initialState);\r\n\r\n  //las funciones\r\n  const registrarUsuario = async datos =>{\r\n    try {\r\n      const respuesta = await clienteAxios.post('/api/usuarios', datos)\r\n      console.log(respuesta);\r\n\r\n      dispatch({\r\n        type:REGISTRO_EXITOSO,\r\n        payload:respuesta.data\r\n      })\r\n      //obtener el usuario\r\n      usuarioAutenticado();\r\n\r\n    } catch (error) {\r\n     // console.log(error.response.data.msg)\r\n     const alerta = {\r\n       msg:error.response.data.msg,\r\n       categoria: 'alerta-error'\r\n     }\r\n      dispatch({\r\n        type:REGISTRO_ERROR,\r\n        payload:alerta\r\n      })\r\n    }\r\n  }\r\n  //retorna el usuario autenticado\r\n\r\n  const usuarioAutenticado= async()=>{\r\n    const token = localStorage.getItem('token');\r\n    \r\n    if(token){\r\n      tokenAuth(token)\r\n    }\r\n    try {\r\n      const respuesta= await clienteAxios.get('/api/auth')\r\n      dispatch({\r\n        type:OBTENER_USUARIO,\r\n        payload: respuesta.data.usuario\r\n      })\r\n    } catch (error) {\r\n      console.log(error.response)\r\n      dispatch({\r\n        type:LOGIN_ERROR,\r\n      })\r\n    }\r\n  }\r\n//cuando el usuario inicia sesion\r\nconst iniciarSesion = async datos =>{\r\n  try {\r\n    const respuesta = await clienteAxios.post('/api/auth', datos)\r\n    dispatch({\r\n      type:LOGIN_EXITOSO,\r\n      payload: respuesta.data\r\n    });\r\n    //obtener el usuario\r\n    usuarioAutenticado();\r\n  } catch (error) {\r\n       console.log(error.response.data.msg)\r\n      const alerta = {\r\n        msg:error.response.data.msg,\r\n        categoria: 'alerta-error'\r\n      }\r\n       dispatch({\r\n         type:LOGIN_ERROR,\r\n         payload:alerta\r\n       })\r\n  }\r\n}\r\n//cierra la sesion del usuario\r\nconst cerrarSesion = ()=>{\r\n  dispatch({\r\n    type:CERRAR_SESION\r\n  })\r\n}\r\n  return (\r\n  <AuthContext.Provider\r\n    value={{\r\n        token:state.token,\r\n        autenticado:state.autenticado,\r\n        usuario:state.usuario,\r\n        mensaje:state.mensaje,\r\n        cargando:state.cargando,\r\n        registrarUsuario,\r\n        iniciarSesion,\r\n        usuarioAutenticado,\r\n        cerrarSesion,\r\n\r\n    }}\r\n  >\r\n      {props.children}\r\n  </AuthContext.Provider>\r\n  )\r\n};\r\n\r\nexport default Authstate;\r\n","import React,{useContext,useEffect} from 'react';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst RutaPrivada = ({component: Component, ...props}) => {\r\n    const authContext= useContext(AuthContext)\r\n    const {autenticado, cargando, usuarioAutenticado}= authContext\r\n\r\n    useEffect(()=>{\r\n        usuarioAutenticado()\r\n      \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n\r\n    return ( \r\n        <Route {...props } render={props=>!autenticado&& !cargando?(\r\n            <Redirect to=\"/\"/>\r\n        ) :(\r\n         <Component {...props} />\r\n            )}\r\n        />\r\n     );\r\n}\r\n \r\nexport default RutaPrivada;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/auth/Login\";\nimport NuevaCuenta from \"./components/auth/NuevaCuenta\";\nimport Proyectos from \"./components/proyectos/Proyectos\";\n\nimport ProyectoState from \"./context/proyectos/proyectoState\";\n\nimport TareaState from \"./context/tareas/tareaState\";\n\nimport AlertaState from './context/alertas/alertaState'\n\nimport Authstate from './context/autenticacion/authState'\n\nimport tokenAuth from \"./config/tokenAuth\";\n\nimport RutaPrivada from \"./components/rutas/RutaPrivada\";\n//revisar si hay un token\nconst token = localStorage.getItem('token')\nif(token){\n  tokenAuth(token);\n}\n\nfunction App() {\n  \n  return (\n    <ProyectoState>\n      <TareaState>\n        <AlertaState>\n          <Authstate>\n            <Router>\n              <Switch>\n                <Route exact path=\"/\" component={Login} />\n                <Route exact path=\"/nueva-cuenta\" component={NuevaCuenta} />\n                <RutaPrivada exact path=\"/proyectos\" component={Proyectos} />\n              </Switch>\n            </Router>\n          </Authstate>\n        </AlertaState>\n      </TareaState>\n    </ProyectoState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}